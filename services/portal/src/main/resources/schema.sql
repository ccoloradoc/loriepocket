drop table meal_summary if exists;
drop view meal_summary if exists;
drop table authority if exists;
drop table invite if exists;
drop table meal if exists;
drop table user if exists;
drop table user_authority if exists;

create table authority (id bigint generated by default as identity, name varchar(255), primary key (id));
create table invite (id bigint generated by default as identity, created_by varchar(255), creation_date timestamp, last_modified_by varchar(255), last_modified_date timestamp, email varchar(255) not null, status varchar(255), primary key (id));
create table meal (id bigint generated by default as identity, created_by varchar(255), creation_date timestamp, last_modified_by varchar(255), last_modified_date timestamp, calories integer not null, consumed_date timestamp not null, name varchar(255) not null, user_id bigint not null, primary key (id));
create table user (id bigint generated by default as identity, created_by varchar(255), creation_date timestamp, last_modified_by varchar(255), last_modified_date timestamp, firstname varchar(255), lastname varchar(255), password varchar(255), username varchar(255), primary key (id));
create table user_authority (user_id bigint not null, authority_id bigint not null);

alter table meal add constraint meal_user_id foreign key (user_id) references user (id);
alter table user_authority add constraint user_auhtority_authority_id foreign key (authority_id) references authority (id);
alter table user_authority add constraint user_auhtority_user_id foreign key (user_id) REFERENCES user (id);

create view MEAL_SUMMARY AS SELECT u.id as ID, FORMATDATETIME(m.consumed_Date, 'yyyy-MM-dd', 'en', 'CST') as consumed_Date, sum(m.calories) as calories, count(*) as elements from MEAL m JOIN USER u ON m.USER_ID = u.ID group by u.id, FORMATDATETIME(m.consumed_Date, 'yyyy-MM-dd', 'en', 'CST') order by u.id, FORMATDATETIME(m.consumed_Date, 'yyyy-MM-dd', 'en', 'CST');
